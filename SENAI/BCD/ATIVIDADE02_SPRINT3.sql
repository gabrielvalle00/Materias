/*  a) - CLIENTE **Priscila** ALTERAR NUMERO PARA *985*  */
UPDATE CLIENTE 
SET 
    NUMERO = '985'
WHERE
    NOME = 'Priscila';

/*  b) - CLIENTE **Karina** ALTERAR NUMERO PARA *1950* E COMPLEMENTO PARA *Bloco H-Ap. 4*; */
UPDATE CLIENTE 
SET 
    NUMERO = '1950',
    COMPLEMENTO = 'Bloco H-Ap. 4'
WHERE
    NOME = 'Karina';

/* c) - CLIENTE **Cibele** ALTERAR NUMERO PARA *23* E COMPLEMENTO PARA *Casa Fundos*; */
UPDATE CLIENTE 
SET 
    NUMERO = '23',
    COMPLEMENTO = 'Casa Fundos'
WHERE
    NOME = 'Cibele';

/* d) - CLIENTE **Marcela** ALTERAR NUMERO PARA *950*;*/
UPDATE CLIENTE 
SET 
    NUMERO = '950'
WHERE
    NOME = 'Marcela';

/* e) - CLIENTE **Roberto** ALTERAR NUMERO PARA *26*;*/
UPDATE CLIENTE 
SET 
    NUMERO = '26'
WHERE
    NOME = 'Roberto';

/* 2 - CRIAR UMA STORED PROCEDURE QUE ATUALIZE O CAMPO **VALOR_TOTAL** DA TABELA PEDIDO,
 AO ATUALIZAR ESSE CAMPO O NOVO VALOR DEVE SER SOMADO COM O VALOR JÁ EXISTENTE NO MESMO.
 NOMEIE A **STORED PROCEDURE** COMO **PRC_ATUALIZA_VALOR_PEDIDO**, LEMBRE-SE QUE A MESMA DEVE RECEBER PARÂMETROS NECESSÁRIOS PARA REALIZAR A OPERAÇÃO,
 OS PARÂMETROS DEVEM SER PASSADOS AO CHAMAR ESSA PROCEDURE NA TRIGGER QUE SERÁ CRIADA NO EXERCÍCIO 3.
 */
DELIMITER $$
CREATE PROCEDURE PRC_ATUALIZA_VALOR_PEDIDO(IN PEDIDO_ID INT, IN VALOR_ITEM DECIMAL(12,2), IN QUANTIDADE INT )
BEGIN
UPDATE PEDIDO
SET VALOR_TOTAL = (VALOR_ITEM * QUANTIDADE) + VALOR_TOTAL
WHERE ID = PEDIDO_ID;
END $$
DELIMITER ;


 
/* 3 - CRIAR UMA TRIGGER PARA A TABELA **ITEM_PEDIDO** SENDO ACIONADA COM **AFTER INSERT**,
 NOMEIE A TRIGGER COMO: **TRG_ACIONA_PRC_ATUALIZA_VALOR_PEDIDO**, ESSA TRIGGER DEVE CHAMAR A 
 **SP** (STORED PROCEDURE) CRIADA NO ITEM 2. */
DELIMITER ||
CREATE TRIGGER TRG_ACIONA_PRC_ATUALIZA_VALOR_PEDIDO
AFTER INSERT ON ITEM_PEDIDO
FOR EACH ROW
BEGIN
CALL PRC_ATUALIZA_VALOR_PEDIDO (NEW.PEDIDO_ID, NEW.VALOR_ITEM, NEW.QUANTIDADE);
END||
DELIMITER ;


/* 4 - NA TABELA **PEDIDO**, ALTERAR O CAMPO ***DATA_HORA_FIM*** INCREMENTANDO 1 (UMA) HORA A MAIS QUE O CAMPO ***DATA_HORA_INI***,
PARA TODOS OS REGISTROS DA TABELA **PEDIDO**. EXEMPLO: **DATA_HORA_INI**: 2024-04-01 18:23:00 **DATA_HORA_FIM**: 2024-04-01 19:23:00. */
UPDATE PEDIDO
SET DATA_HORA_FIM = DATE_ADD(DATA_HORA_INI, INTERVAL 1 HOUR);


/* 5 - SELECIONAR OS 20 PEDIDOS DE MAIOR VALOR ORDENADOS POR ORDEM DECRESCENTE; */
SELECT *
FROM PEDIDO
ORDER BY VALOR_TOTAL DESC
LIMIT 20;

/* 6 - SELECIONAR OS 20 PEDIDOS DE MENOR VALOR ORDENADOS POR ORDEM CRESCENTE; */
SELECT *
FROM PEDIDO
ORDER BY VALOR_TOTAL ASC
LIMIT 20;


### 7 - SELECIONAR OS CLIENTES DAS QUESTÕES 3 E 4 EXIBINDO O NOME, CPF E UM TELEFONE (CASO EXISTA);
SELECT c.nome, c.cpf, t.numero AS telefone
FROM cliente c
LEFT JOIN telefone t ON c.id = t.cliente_id
WHERE c.id IN (
    SELECT cliente_id
    FROM pedido
);

### 8 - CRIAR UM SELECT QUE EXIBA OS SEGUINTES CAMPOS:
#- **NOME**, **TELEFONE** E **CPF** (TABELA CLIENTE)
#- **ID** DO PEDIDO, **DATA/HORA** DA FINALIZAÇÃO E **VALOR_TOTAL** (TABELA PEDIDO) 
#- **NOME** DO ENTREGADOR (TABELA ENTREGADOR)

SELECT 
    c.nome AS Nome_cliente,
    t.numero AS Telefone,
    c.cpf AS CPF,
    p.id AS ID_pedido,
    p.data_hora_fim AS Data_hora_finalizacao,
    p.valor_total AS Valor_total,
    e.nome AS Nome_entregador
FROM 
    pedido p
JOIN 
    cliente c ON p.cliente_id = c.id
LEFT JOIN 
    telefone t ON c.id = t.cliente_id
JOIN 
    entregador e ON p.entregador_id = e.id;